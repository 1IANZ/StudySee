// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.11.1.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../../frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

// These functions are ignored because they are not marked as `pub`: `extract_duration`, `extract_text`, `extract_time_ranges`

Future<List<CourseSchedule>> parseCourseSchedule({required String html}) =>
    RustLib.instance.api.crateApiJwxtCourseParseCourseSchedule(html: html);

class CourseSchedule {
  final String id;
  final String name;
  final String teacher;
  final String timeRange;
  final String dayOfWeek;
  final BigInt section;
  final String weeks;
  final String classroom;
  final String duration;

  const CourseSchedule({
    required this.id,
    required this.name,
    required this.teacher,
    required this.timeRange,
    required this.dayOfWeek,
    required this.section,
    required this.weeks,
    required this.classroom,
    required this.duration,
  });

  @override
  int get hashCode =>
      id.hashCode ^
      name.hashCode ^
      teacher.hashCode ^
      timeRange.hashCode ^
      dayOfWeek.hashCode ^
      section.hashCode ^
      weeks.hashCode ^
      classroom.hashCode ^
      duration.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is CourseSchedule &&
          runtimeType == other.runtimeType &&
          id == other.id &&
          name == other.name &&
          teacher == other.teacher &&
          timeRange == other.timeRange &&
          dayOfWeek == other.dayOfWeek &&
          section == other.section &&
          weeks == other.weeks &&
          classroom == other.classroom &&
          duration == other.duration;
}
