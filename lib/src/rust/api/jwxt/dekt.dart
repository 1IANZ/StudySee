// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.11.1.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../../frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

// These function are ignored because they are on traits that is not defined in current crate (put an empty `#[frb]` on it to unignore): `fmt`

Future<List<DEKTList>> parseDektList({required String html}) =>
    RustLib.instance.api.crateApiJwxtDektParseDektList(html: html);

Future<List<DEKTTotal>> parseDektTotal({required String html}) =>
    RustLib.instance.api.crateApiJwxtDektParseDektTotal(html: html);

Future<DEKTDetail> parseDektDetail({required String html}) =>
    RustLib.instance.api.crateApiJwxtDektParseDektDetail(html: html);

Future<DEKT> parseDekt({required String html}) =>
    RustLib.instance.api.crateApiJwxtDektParseDekt(html: html);

class DEKT {
  final List<DEKTList> list;
  final List<DEKTTotal> total;

  const DEKT({required this.list, required this.total});

  @override
  int get hashCode => list.hashCode ^ total.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is DEKT &&
          runtimeType == other.runtimeType &&
          list == other.list &&
          total == other.total;
}

class DEKTDetail {
  final Map<String, String> field0;

  const DEKTDetail({required this.field0});

  @override
  int get hashCode => field0.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is DEKTDetail &&
          runtimeType == other.runtimeType &&
          field0 == other.field0;
}

class DEKTList {
  final String id;
  final String semester;
  final String category;
  final String subCategory;
  final String activityName;
  final String credit;
  final String operationId;

  const DEKTList({
    required this.id,
    required this.semester,
    required this.category,
    required this.subCategory,
    required this.activityName,
    required this.credit,
    required this.operationId,
  });

  @override
  int get hashCode =>
      id.hashCode ^
      semester.hashCode ^
      category.hashCode ^
      subCategory.hashCode ^
      activityName.hashCode ^
      credit.hashCode ^
      operationId.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is DEKTList &&
          runtimeType == other.runtimeType &&
          id == other.id &&
          semester == other.semester &&
          category == other.category &&
          subCategory == other.subCategory &&
          activityName == other.activityName &&
          credit == other.credit &&
          operationId == other.operationId;
}

class DEKTTotal {
  final String category;
  final String totalCredit;

  const DEKTTotal({required this.category, required this.totalCredit});

  @override
  int get hashCode => category.hashCode ^ totalCredit.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is DEKTTotal &&
          runtimeType == other.runtimeType &&
          category == other.category &&
          totalCredit == other.totalCredit;
}
